                        .module _12864time.c
                        .area text(rom, con, rel)
 0000                   .dbfile 12864time.c
                        .area data(ram, con, rel)
 0000                   .dbfile 12864time.c
 0000           _time_buf::
 0000                   .blkb 2
                        .area idata
 0000 2014              .byte 32,20
                        .area data(ram, con, rel)
 0002                   .dbfile 12864time.c
 0002                   .blkb 2
                        .area idata
 0002 1014              .byte 16,20
                        .area data(ram, con, rel)
 0004                   .dbfile 12864time.c
 0004                   .blkb 2
                        .area idata
 0004 2254              .byte 34,'T
                        .area data(ram, con, rel)
 0006                   .dbfile 12864time.c
 0006                   .blkb 2
                        .area idata
 0006 5905              .byte 'Y,5
                        .area data(ram, con, rel)
 0008                   .dbfile 12864time.c
 0008                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 0008                   .dbsym e time_buf _time_buf A[8:8]c
                        .area text(rom, con, rel)
 0000                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 0000                   .dbfunc e ds1302_write_byte _ds1302_write_byte fV
 0000           ;              i -> R20
 0000           ;              d -> R18
 0000           ;           addr -> R16
                        .even
 0000           _ds1302_write_byte::
 0000 4A93              st -y,R20
 0002                   .dbline -1
 0002                   .dbline 24
 0002           ; //DMAVR-128开发板12864型液晶显示实时时钟驱动程序
 0002           ; //编译环境 编译环境 ICCAVR 7.16A
 0002           ; //系统时钟7.3728MHZ，设置熔丝位为外部高频石英晶体振荡，启动时间4.1ms
 0002           ; //作者：阿迪 www.avrgcc.com
 0002           ; //日期：2010.12.112
 0002           ; 
 0002           ; //***********************************************************************
 0002           ; //                    包含文件
 0002           ; //***********************************************************************
 0002           ; 
 0002           ; 
 0002           ; 
 0002           ; #include <iom128v.h>
 0002           ; #include "12864time.h"
 0002           ; #include "basic.h"
 0002           ; #include "LCD.h"
 0002           ; 
 0002           ; volatile unsigned char time_buf[8] = {0x20,0x14,0x10,0x14,0x22,0x54,0x59,0x05};
 0002           ; 
 0002           ; //***********************************************************************
 0002           ; //向DS1302写入一字节数据
 0002           ; //***********************************************************************
 0002           ; void ds1302_write_byte(unsigned char addr, unsigned char d) 
 0002           ; {
 0002                   .dbline 27
 0002           ; 
 0002           ;       unsigned char i;
 0002           ;       RST_SET;                                        //启动DS1302总线
 0002 1F9A              sbi 0x3,7
 0004                   .dbline 30
 0004           ;       
 0004           ;                                                       //写入目标地址：addr
 0004           ;       IO_OUT;
 0004 169A              sbi 0x2,6
 0006                   .dbline 31
 0006           ;       addr = addr & 0xFE;                            //最低位置零
 0006 0E7F              andi R16,254
 0008                   .dbline 32
 0008           ;       for (i = 0; i < 8; i ++) {
 0008 4427              clr R20
 000A 09C0              xjmp L5
 000C           L2:
 000C                   .dbline 32
 000C                   .dbline 33
 000C           ;               if (addr & 0x01) {
 000C 00FF              sbrs R16,0
 000E 02C0              rjmp L6
 0010           X0:
 0010                   .dbline 33
 0010                   .dbline 34
 0010           ;                       IO_SET;
 0010 1E9A              sbi 0x3,6
 0012                   .dbline 35
 0012           ;                       }
 0012 01C0              xjmp L7
 0014           L6:
 0014                   .dbline 36
 0014           ;               else {
 0014                   .dbline 37
 0014           ;                       IO_CLR;
 0014 1E98              cbi 0x3,6
 0016                   .dbline 38
 0016           ;                       }
 0016           L7:
 0016                   .dbline 39
 0016           ;               SCK_SET;
 0016 1D9A              sbi 0x3,5
 0018                   .dbline 40
 0018           ;               SCK_CLR;
 0018 1D98              cbi 0x3,5
 001A                   .dbline 41
 001A           ;               addr = addr >> 1;
 001A 0695              lsr R16
 001C                   .dbline 42
 001C           ;               }
 001C           L3:
 001C                   .dbline 32
 001C 4395              inc R20
 001E           L5:
 001E                   .dbline 32
 001E 4830              cpi R20,8
 0020 A8F3              brlo L2
 0022           X1:
 0022                   .dbline 45
 0022           ;       
 0022           ;                                                     //写入数据：d
 0022           ;       IO_OUT;
 0022 169A              sbi 0x2,6
 0024                   .dbline 46
 0024           ;       for (i = 0; i < 8; i ++) {
 0024 4427              clr R20
 0026 09C0              xjmp L11
 0028           L8:
 0028                   .dbline 46
 0028                   .dbline 47
 0028           ;               if (d & 0x01) {
 0028 20FF              sbrs R18,0
 002A 02C0              rjmp L12
 002C           X2:
 002C                   .dbline 47
 002C                   .dbline 48
 002C           ;                       IO_SET;
 002C 1E9A              sbi 0x3,6
 002E                   .dbline 49
 002E           ;                       }
 002E 01C0              xjmp L13
 0030           L12:
 0030                   .dbline 50
 0030           ;               else {
 0030                   .dbline 51
 0030           ;                       IO_CLR;
 0030 1E98              cbi 0x3,6
 0032                   .dbline 52
 0032           ;                       }
 0032           L13:
 0032                   .dbline 53
 0032           ;               SCK_SET;
 0032 1D9A              sbi 0x3,5
 0034                   .dbline 54
 0034           ;               SCK_CLR;
 0034 1D98              cbi 0x3,5
 0036                   .dbline 55
 0036           ;               d = d >> 1;
 0036 2695              lsr R18
 0038                   .dbline 56
 0038           ;               }
 0038           L9:
 0038                   .dbline 46
 0038 4395              inc R20
 003A           L11:
 003A                   .dbline 46
 003A 4830              cpi R20,8
 003C A8F3              brlo L8
 003E           X3:
 003E                   .dbline 57
 003E           ;       RST_CLR;                                        //停止DS1302总线
 003E 1F98              cbi 0x3,7
 0040                   .dbline -2
 0040           L1:
 0040                   .dbline 0 ; func end
 0040 4991              ld R20,y+
 0042 0895              ret
 0044                   .dbsym r i 20 c
 0044                   .dbsym r d 18 c
 0044                   .dbsym r addr 16 c
 0044                   .dbend
 0044                   .dbfunc e ds1302_read_byte _ds1302_read_byte fc
 0044           ;           temp -> R20
 0044           ;              i -> R22
 0044           ;           addr -> R16
                        .even
 0044           _ds1302_read_byte::
 0044 4A93              st -y,R20
 0046 6A93              st -y,R22
 0048                   .dbline -1
 0048                   .dbline 64
 0048           ; }
 0048           ; 
 0048           ; //***********************************************************************
 0048           ; //                   从DS1302读出一字节数据
 0048           ; //***********************************************************************
 0048           ; unsigned char ds1302_read_byte(unsigned char addr)
 0048           ;  {
 0048                   .dbline 68
 0048           ; 
 0048           ;       unsigned char i;
 0048           ;       unsigned char temp;
 0048           ;       RST_SET;                                        //启动DS1302总线
 0048 1F9A              sbi 0x3,7
 004A                   .dbline 71
 004A           ; 
 004A           ;                                                       //写入目标地址：addr
 004A           ;       IO_OUT;
 004A 169A              sbi 0x2,6
 004C                   .dbline 72
 004C           ;       addr = addr | 0x01;                             //最低位置高
 004C 0160              ori R16,1
 004E                   .dbline 73
 004E           ;       for (i = 0; i < 8; i ++) {
 004E 6627              clr R22
 0050 09C0              xjmp L18
 0052           L15:
 0052                   .dbline 73
 0052                   .dbline 74
 0052           ;               if (addr & 0x01) {
 0052 00FF              sbrs R16,0
 0054 02C0              rjmp L19
 0056           X4:
 0056                   .dbline 74
 0056                   .dbline 75
 0056           ;                       IO_SET;
 0056 1E9A              sbi 0x3,6
 0058                   .dbline 76
 0058           ;                       }
 0058 01C0              xjmp L20
 005A           L19:
 005A                   .dbline 77
 005A           ;               else {
 005A                   .dbline 78
 005A           ;                       IO_CLR;
 005A 1E98              cbi 0x3,6
 005C                   .dbline 79
 005C           ;                       }
 005C           L20:
 005C                   .dbline 80
 005C           ;               SCK_SET;
 005C 1D9A              sbi 0x3,5
 005E                   .dbline 81
 005E           ;               SCK_CLR;
 005E 1D98              cbi 0x3,5
 0060                   .dbline 82
 0060           ;               addr = addr >> 1;
 0060 0695              lsr R16
 0062                   .dbline 83
 0062           ;               }
 0062           L16:
 0062                   .dbline 73
 0062 6395              inc R22
 0064           L18:
 0064                   .dbline 73
 0064 6830              cpi R22,8
 0066 A8F3              brlo L15
 0068           X5:
 0068                   .dbline 86
 0068           ;       
 0068           ;       /*输出数据：temp*/
 0068           ;       IO_IN;
 0068 1698              cbi 0x2,6
 006A                   .dbline 87
 006A           ;       for (i = 0; i < 8; i ++) {
 006A 6627              clr R22
 006C 09C0              xjmp L24
 006E           L21:
 006E                   .dbline 87
 006E                   .dbline 88
 006E           ;               temp = temp >> 1;
 006E 4695              lsr R20
 0070                   .dbline 89
 0070           ;               if (IO_R) {
 0070 0E9B              sbis 0x1,6
 0072 02C0              rjmp L25
 0074           X6:
 0074                   .dbline 89
 0074                   .dbline 90
 0074           ;                       temp |= 0x80;
 0074 4068              ori R20,128
 0076                   .dbline 91
 0076           ;                       }
 0076 01C0              xjmp L26
 0078           L25:
 0078                   .dbline 92
 0078           ;               else {
 0078                   .dbline 93
 0078           ;                       temp &= 0x7F;
 0078 4F77              andi R20,127
 007A                   .dbline 94
 007A           ;                       }
 007A           L26:
 007A                   .dbline 95
 007A           ;               SCK_SET;
 007A 1D9A              sbi 0x3,5
 007C                   .dbline 96
 007C           ;               SCK_CLR;
 007C 1D98              cbi 0x3,5
 007E                   .dbline 97
 007E           ;               }
 007E           L22:
 007E                   .dbline 87
 007E 6395              inc R22
 0080           L24:
 0080                   .dbline 87
 0080 6830              cpi R22,8
 0082 A8F3              brlo L21
 0084           X7:
 0084                   .dbline 99
 0084           ;       
 0084           ;       RST_CLR;                                        //停止DS1302总线
 0084 1F98              cbi 0x3,7
 0086                   .dbline 100
 0086           ;       return temp;
 0086 042F              mov R16,R20
 0088                   .dbline -2
 0088           L14:
 0088                   .dbline 0 ; func end
 0088 6991              ld R22,y+
 008A 4991              ld R20,y+
 008C 0895              ret
 008E                   .dbsym r temp 20 c
 008E                   .dbsym r i 22 c
 008E                   .dbsym r addr 16 c
 008E                   .dbend
 008E                   .dbfunc e ds1302_write_time _ds1302_write_time fV
                        .even
 008E           _ds1302_write_time::
 008E                   .dbline -1
 008E                   .dbline 108
 008E           ; }
 008E           ; 
 008E           ; //***********************************************************************
 008E           ; //                   向DS302写入时钟数据
 008E           ; //***********************************************************************
 008E           ; 
 008E           ; void ds1302_write_time(void)
 008E           ;  {
 008E                   .dbline 110
 008E           ; 
 008E           ;       ds1302_write_byte(ds1302_control_add,0x00);             //关闭写保护 
 008E 2227              clr R18
 0090 0EE8              ldi R16,142
 0092 B6DF              xcall _ds1302_write_byte
 0094                   .dbline 111
 0094           ;       ds1302_write_byte(ds1302_sec_add,0x80);                 //暂停 
 0094 20E8              ldi R18,128
 0096 00E8              ldi R16,128
 0098 B3DF              xcall _ds1302_write_byte
 009A                   .dbline 113
 009A           ;       //ds1302_write_byte(ds1302_charger_add,0xa9);           //涓流充电 
 009A           ;       ds1302_write_byte(ds1302_year_add,time_buf[1]);         //年 
 009A 20910100          lds R18,_time_buf+1
 009E 0CE8              ldi R16,140
 00A0 AFDF              xcall _ds1302_write_byte
 00A2                   .dbline 114
 00A2           ;       ds1302_write_byte(ds1302_month_add,time_buf[2]);        //月 
 00A2 20910200          lds R18,_time_buf+2
 00A6 08E8              ldi R16,136
 00A8 ABDF              xcall _ds1302_write_byte
 00AA                   .dbline 115
 00AA           ;       ds1302_write_byte(ds1302_date_add,time_buf[3]);         //日 
 00AA 20910300          lds R18,_time_buf+3
 00AE 06E8              ldi R16,134
 00B0 A7DF              xcall _ds1302_write_byte
 00B2                   .dbline 116
 00B2           ;       ds1302_write_byte(ds1302_day_add,time_buf[7]);          //周 
 00B2 20910700          lds R18,_time_buf+7
 00B6 0AE8              ldi R16,138
 00B8 A3DF              xcall _ds1302_write_byte
 00BA                   .dbline 117
 00BA           ;       ds1302_write_byte(ds1302_hr_add,time_buf[4]);           //时 
 00BA 20910400          lds R18,_time_buf+4
 00BE 04E8              ldi R16,132
 00C0 9FDF              xcall _ds1302_write_byte
 00C2                   .dbline 118
 00C2           ;       ds1302_write_byte(ds1302_min_add,time_buf[5]);          //分
 00C2 20910500          lds R18,_time_buf+5
 00C6 02E8              ldi R16,130
 00C8 9BDF              xcall _ds1302_write_byte
 00CA                   .dbline 119
 00CA           ;       ds1302_write_byte(ds1302_sec_add,time_buf[6]);          //秒
 00CA 20910600          lds R18,_time_buf+6
 00CE 00E8              ldi R16,128
 00D0 97DF              xcall _ds1302_write_byte
 00D2                   .dbline 121
 00D2           ;       //ds1302_write_byte(ds1302_day_add,time_buf[7]);                //周 
 00D2           ;       ds1302_write_byte(ds1302_control_add,0x80);             //打开写保护 
 00D2 20E8              ldi R18,128
 00D4 0EE8              ldi R16,142
 00D6                   .dbline -2
 00D6           L27:
 00D6                   .dbline 0 ; func end
 00D6 94CF              xjmp _ds1302_write_byte
 00D8                   .dbend
 00D8                   .dbfunc e ds1302_read_time _ds1302_read_time fV
                        .even
 00D8           _ds1302_read_time::
 00D8 AA92              st -y,R10
 00DA 4A93              st -y,R20
 00DC                   .dbline -1
 00DC                   .dbline 129
 00DC           ; }
 00DC           ; 
 00DC           ; //***********************************************************************
 00DC           ; //                     从DS302读出时钟数据
 00DC           ; //***********************************************************************
 00DC           ; 
 00DC           ; void ds1302_read_time(void)  
 00DC           ; { 
 00DC                   .dbline 131
 00DC           ; 
 00DC           ;       time_buf[1]=ds1302_read_byte(ds1302_year_add);          //年 
 00DC 0CE8              ldi R16,140
 00DE B2DF              xcall _ds1302_read_byte
 00E0 00930100          sts _time_buf+1,R16
 00E4                   .dbline 132
 00E4           ;       time_buf[2]=ds1302_read_byte(ds1302_month_add);         //月 
 00E4 08E8              ldi R16,136
 00E6 AEDF              xcall _ds1302_read_byte
 00E8 00930200          sts _time_buf+2,R16
 00EC                   .dbline 133
 00EC           ;       time_buf[3]=ds1302_read_byte(ds1302_date_add);          //日 
 00EC 06E8              ldi R16,134
 00EE AADF              xcall _ds1302_read_byte
 00F0 A02E              mov R10,R16
 00F2 A0920300          sts _time_buf+3,R10
 00F6                   .dbline 134
 00F6           ;       time_buf[4]=ds1302_read_byte(ds1302_hr_add);            //时 
 00F6 04E8              ldi R16,132
 00F8 A5DF              xcall _ds1302_read_byte
 00FA A02E              mov R10,R16
 00FC A0920400          sts _time_buf+4,R10
 0100                   .dbline 135
 0100           ;       time_buf[5]=ds1302_read_byte(ds1302_min_add);           //分 
 0100 02E8              ldi R16,130
 0102 A0DF              xcall _ds1302_read_byte
 0104 A02E              mov R10,R16
 0106 A0920500          sts _time_buf+5,R10
 010A                   .dbline 136
 010A           ;       time_buf[6]=(ds1302_read_byte(ds1302_sec_add))&0x7F;//秒 
 010A 00E8              ldi R16,128
 010C 9BDF              xcall _ds1302_read_byte
 010E 402F              mov R20,R16
 0110 842F              mov R24,R20
 0112 8F77              andi R24,127
 0114 80930600          sts _time_buf+6,R24
 0118                   .dbline 137
 0118           ;       time_buf[7]=ds1302_read_byte(ds1302_day_add);           //周 
 0118 0AE8              ldi R16,138
 011A 94DF              xcall _ds1302_read_byte
 011C A02E              mov R10,R16
 011E A0920700          sts _time_buf+7,R10
 0122                   .dbline -2
 0122           L35:
 0122                   .dbline 0 ; func end
 0122 4991              ld R20,y+
 0124 A990              ld R10,y+
 0126 0895              ret
 0128                   .dbend
 0128                   .dbfunc e ds1302_init _ds1302_init fV
                        .even
 0128           _ds1302_init::
 0128                   .dbline -1
 0128                   .dbline 145
 0128           ; }
 0128           ; 
 0128           ; //***********************************************************************
 0128           ; //               DS302初始化函数
 0128           ; //***********************************************************************
 0128           ; 
 0128           ; void ds1302_init(void) 
 0128           ; {
 0128                   .dbline 147
 0128           ;       
 0128           ;       RST_CLR;                        //RST脚置低
 0128 1F98              cbi 0x3,7
 012A                   .dbline 148
 012A           ;       SCK_CLR;                        //SCK脚置低
 012A 1D98              cbi 0x3,5
 012C                   .dbline 149
 012C           ;       RST_OUT;                        //RST脚设置为输出
 012C 179A              sbi 0x2,7
 012E                   .dbline 150
 012E           ;       SCK_OUT;                        //SCK脚设置为输出
 012E 159A              sbi 0x2,5
 0130                   .dbline -2
 0130           L43:
 0130                   .dbline 0 ; func end
 0130 0895              ret
 0132                   .dbend
 0132                   .dbfunc e dayToChina _dayToChina fV
 0132           ;            day -> R20
                        .even
 0132           _dayToChina::
 0132 4A93              st -y,R20
 0134 402F              mov R20,R16
 0136                   .dbline -1
 0136                   .dbline 159
 0136           ; }
 0136           ; 
 0136           ; 
 0136           ; 
 0136           ; //***********************************************************************
 0136           ; //    数字周转中文周
 0136           ; //***********************************************************************
 0136           ; void dayToChina(unsigned char day)
 0136           ; {
 0136                   .dbline 160
 0136           ;           if(day == 0x01)
 0136 4130              cpi R20,1
 0138 29F4              brne L45
 013A           X8:
 013A                   .dbline 161
 013A           ;                       DisplayCgrom(0x86,"周一");
 013A 20E0              ldi R18,<L47
 013C 30E0              ldi R19,>L47
 013E 06E8              ldi R16,134
 0140 0E940000          xcall _DisplayCgrom
 0144           L45:
 0144                   .dbline 162
 0144           ;               if(day == 0x02)
 0144 4230              cpi R20,2
 0146 29F4              brne L48
 0148           X9:
 0148                   .dbline 163
 0148           ;                       DisplayCgrom(0x86,"周二");
 0148 20E0              ldi R18,<L50
 014A 30E0              ldi R19,>L50
 014C 06E8              ldi R16,134
 014E 0E940000          xcall _DisplayCgrom
 0152           L48:
 0152                   .dbline 164
 0152           ;               if(day == 0x03)
 0152 4330              cpi R20,3
 0154 29F4              brne L51
 0156           X10:
 0156                   .dbline 165
 0156           ;                       DisplayCgrom(0x86,"周三");
 0156 20E0              ldi R18,<L53
 0158 30E0              ldi R19,>L53
 015A 06E8              ldi R16,134
 015C 0E940000          xcall _DisplayCgrom
 0160           L51:
 0160                   .dbline 166
 0160           ;               if(day == 0x04)
 0160 4430              cpi R20,4
 0162 29F4              brne L54
 0164           X11:
 0164                   .dbline 167
 0164           ;                       DisplayCgrom(0x86,"周四");
 0164 20E0              ldi R18,<L56
 0166 30E0              ldi R19,>L56
 0168 06E8              ldi R16,134
 016A 0E940000          xcall _DisplayCgrom
 016E           L54:
 016E                   .dbline 168
 016E           ;               if(day == 0x05)
 016E 4530              cpi R20,5
 0170 29F4              brne L57
 0172           X12:
 0172                   .dbline 169
 0172           ;                       DisplayCgrom(0x86,"周五");
 0172 20E0              ldi R18,<L59
 0174 30E0              ldi R19,>L59
 0176 06E8              ldi R16,134
 0178 0E940000          xcall _DisplayCgrom
 017C           L57:
 017C                   .dbline 170
 017C           ;               if(day == 0x06)
 017C 4630              cpi R20,6
 017E 29F4              brne L60
 0180           X13:
 0180                   .dbline 171
 0180           ;                       DisplayCgrom(0x86,"周六");
 0180 20E0              ldi R18,<L62
 0182 30E0              ldi R19,>L62
 0184 06E8              ldi R16,134
 0186 0E940000          xcall _DisplayCgrom
 018A           L60:
 018A                   .dbline 172
 018A           ;               if(day == 0x07)
 018A 4730              cpi R20,7
 018C 29F4              brne L63
 018E           X14:
 018E                   .dbline 173
 018E           ;                       DisplayCgrom(0x86,"周日");
 018E 20E0              ldi R18,<L65
 0190 30E0              ldi R19,>L65
 0192 06E8              ldi R16,134
 0194 0E940000          xcall _DisplayCgrom
 0198           L63:
 0198                   .dbline -2
 0198           L44:
 0198                   .dbline 0 ; func end
 0198 4991              ld R20,y+
 019A 0895              ret
 019C                   .dbsym r day 20 c
 019C                   .dbend
 019C                   .dbfunc e displayDateTime _displayDateTime fV
 019C           ;           temp -> y+0
                        .even
 019C           _displayDateTime::
 019C 2197              sbiw R28,1
 019E                   .dbline -1
 019E                   .dbline 180
 019E           ; }
 019E           ; 
 019E           ; //***********************************************************************
 019E           ; //    显示系统时间 年月日、星期
 019E           ; //***********************************************************************
 019E           ; void displayDateTime(void)
 019E           ; {
 019E                   .dbline 182
 019E           ;       volatile unsigned char temp;
 019E           ;     delay_nms(200);
 019E 08EC              ldi R16,200
 01A0 10E0              ldi R17,0
 01A2 0E940000          xcall _delay_nms
 01A6                   .dbline 183
 01A6           ;       ds1302_read_time();                               //读DS1302数据
 01A6 98DF              xcall _ds1302_read_time
 01A8                   .dbline 185
 01A8           ;               
 01A8           ;       LCD_write_com(0x80);
 01A8 00E8              ldi R16,128
 01AA 0E940000          xcall _LCD_write_com
 01AE                   .dbline 186
 01AE           ;       delay_nms(2);
 01AE 02E0              ldi R16,2
 01B0 10E0              ldi R17,0
 01B2 0E940000          xcall _delay_nms
 01B6                   .dbline 187
 01B6           ;     temp = (time_buf[0] >> 4) + '0';          //在LCD上写要显示的数据 
 01B6 80910000          lds R24,_time_buf
 01BA 8295              swap R24
 01BC 8F70              andi R24,#0x0F
 01BE 805D              subi R24,208    ; addi 48
 01C0 8883              std y+0,R24
 01C2                   .dbline 188
 01C2           ;     LCD_write_data(temp);
 01C2 082F              mov R16,R24
 01C4 0E940000          xcall _LCD_write_data
 01C8                   .dbline 189
 01C8           ;       delay_nms(2);
 01C8 02E0              ldi R16,2
 01CA 10E0              ldi R17,0
 01CC 0E940000          xcall _delay_nms
 01D0                   .dbline 190
 01D0           ;       temp = (time_buf[0] & 0x0F) + '0';      
 01D0 80910000          lds R24,_time_buf
 01D4 8F70              andi R24,15
 01D6 805D              subi R24,208    ; addi 48
 01D8 8883              std y+0,R24
 01DA                   .dbline 191
 01DA           ;       LCD_write_data(temp);
 01DA 082F              mov R16,R24
 01DC 0E940000          xcall _LCD_write_data
 01E0                   .dbline 192
 01E0           ;       delay_nms(2);
 01E0 02E0              ldi R16,2
 01E2 10E0              ldi R17,0
 01E4 0E940000          xcall _delay_nms
 01E8                   .dbline 193
 01E8           ;       temp = (time_buf[1] >> 4) + '0';                
 01E8 80910100          lds R24,_time_buf+1
 01EC 8295              swap R24
 01EE 8F70              andi R24,#0x0F
 01F0 805D              subi R24,208    ; addi 48
 01F2 8883              std y+0,R24
 01F4                   .dbline 194
 01F4           ;     LCD_write_data(temp);
 01F4 082F              mov R16,R24
 01F6 0E940000          xcall _LCD_write_data
 01FA                   .dbline 195
 01FA           ;       delay_nms(2);
 01FA 02E0              ldi R16,2
 01FC 10E0              ldi R17,0
 01FE 0E940000          xcall _delay_nms
 0202                   .dbline 197
 0202           ;                
 0202           ;       temp = (time_buf[1] & 0x0F) + '0';
 0202 80910100          lds R24,_time_buf+1
 0206 8F70              andi R24,15
 0208 805D              subi R24,208    ; addi 48
 020A 8883              std y+0,R24
 020C                   .dbline 198
 020C           ;       LCD_write_data(temp);
 020C 082F              mov R16,R24
 020E 0E940000          xcall _LCD_write_data
 0212                   .dbline 199
 0212           ;       delay_nms(2);
 0212 02E0              ldi R16,2
 0214 10E0              ldi R17,0
 0216 0E940000          xcall _delay_nms
 021A                   .dbline 200
 021A           ;       LCD_write_data('-');
 021A 0DE2              ldi R16,45
 021C 0E940000          xcall _LCD_write_data
 0220                   .dbline 201
 0220           ;       delay_nms(2);
 0220 02E0              ldi R16,2
 0222 10E0              ldi R17,0
 0224 0E940000          xcall _delay_nms
 0228                   .dbline 203
 0228           ; 
 0228           ;       temp = (time_buf[2] >> 4) + '0';                
 0228 80910200          lds R24,_time_buf+2
 022C 8295              swap R24
 022E 8F70              andi R24,#0x0F
 0230 805D              subi R24,208    ; addi 48
 0232 8883              std y+0,R24
 0234                   .dbline 204
 0234           ;     LCD_write_data(temp);
 0234 082F              mov R16,R24
 0236 0E940000          xcall _LCD_write_data
 023A                   .dbline 205
 023A           ;       delay_nms(2);
 023A 02E0              ldi R16,2
 023C 10E0              ldi R17,0
 023E 0E940000          xcall _delay_nms
 0242                   .dbline 206
 0242           ;       temp = (time_buf[2] & 0x0F) + '0';
 0242 80910200          lds R24,_time_buf+2
 0246 8F70              andi R24,15
 0248 805D              subi R24,208    ; addi 48
 024A 8883              std y+0,R24
 024C                   .dbline 207
 024C           ;       LCD_write_data(temp);
 024C 082F              mov R16,R24
 024E 0E940000          xcall _LCD_write_data
 0252                   .dbline 208
 0252           ;       delay_nms(2);
 0252 02E0              ldi R16,2
 0254 10E0              ldi R17,0
 0256 0E940000          xcall _delay_nms
 025A                   .dbline 209
 025A           ;       LCD_write_data('-');
 025A 0DE2              ldi R16,45
 025C 0E940000          xcall _LCD_write_data
 0260                   .dbline 210
 0260           ;       delay_nms(2);
 0260 02E0              ldi R16,2
 0262 10E0              ldi R17,0
 0264 0E940000          xcall _delay_nms
 0268                   .dbline 212
 0268           ; 
 0268           ;       temp = (time_buf[3] >> 4) + '0';                
 0268 80910300          lds R24,_time_buf+3
 026C 8295              swap R24
 026E 8F70              andi R24,#0x0F
 0270 805D              subi R24,208    ; addi 48
 0272 8883              std y+0,R24
 0274                   .dbline 213
 0274           ;     LCD_write_data(temp);
 0274 082F              mov R16,R24
 0276 0E940000          xcall _LCD_write_data
 027A                   .dbline 214
 027A           ;       delay_nms(2);
 027A 02E0              ldi R16,2
 027C 10E0              ldi R17,0
 027E 0E940000          xcall _delay_nms
 0282                   .dbline 215
 0282           ;       temp = (time_buf[3] & 0x0F) + '0';
 0282 80910300          lds R24,_time_buf+3
 0286 8F70              andi R24,15
 0288 805D              subi R24,208    ; addi 48
 028A 8883              std y+0,R24
 028C                   .dbline 216
 028C           ;       LCD_write_data(temp);
 028C 082F              mov R16,R24
 028E 0E940000          xcall _LCD_write_data
 0292                   .dbline 217
 0292           ;       delay_nms(2);
 0292 02E0              ldi R16,2
 0294 10E0              ldi R17,0
 0296 0E940000          xcall _delay_nms
 029A                   .dbline 220
 029A           ;               
 029A           ;       //显示星期
 029A           ;       dayToChina(time_buf[7]);
 029A 00910700          lds R16,_time_buf+7
 029E 49DF              xcall _dayToChina
 02A0                   .dbline 221
 02A0           ;       delay_nms(2);
 02A0 02E0              ldi R16,2
 02A2 10E0              ldi R17,0
 02A4 0E940000          xcall _delay_nms
 02A8                   .dbline 224
 02A8           ;               
 02A8           ; 
 02A8           ;       LCD_write_com(0x90);
 02A8 00E9              ldi R16,144
 02AA 0E940000          xcall _LCD_write_com
 02AE                   .dbline 225
 02AE           ;       delay_nms(5);
 02AE 05E0              ldi R16,5
 02B0 10E0              ldi R17,0
 02B2 0E940000          xcall _delay_nms
 02B6                   .dbline 227
 02B6           ; 
 02B6           ;       temp = (time_buf[4] >> 4) + '0';                
 02B6 80910400          lds R24,_time_buf+4
 02BA 8295              swap R24
 02BC 8F70              andi R24,#0x0F
 02BE 805D              subi R24,208    ; addi 48
 02C0 8883              std y+0,R24
 02C2                   .dbline 228
 02C2           ;     LCD_write_data(temp);
 02C2 082F              mov R16,R24
 02C4 0E940000          xcall _LCD_write_data
 02C8                   .dbline 229
 02C8           ;       delay_nms(2);
 02C8 02E0              ldi R16,2
 02CA 10E0              ldi R17,0
 02CC 0E940000          xcall _delay_nms
 02D0                   .dbline 230
 02D0           ;       temp = (time_buf[4] & 0x0F) + '0';
 02D0 80910400          lds R24,_time_buf+4
 02D4 8F70              andi R24,15
 02D6 805D              subi R24,208    ; addi 48
 02D8 8883              std y+0,R24
 02DA                   .dbline 231
 02DA           ;       LCD_write_data(temp);
 02DA 082F              mov R16,R24
 02DC 0E940000          xcall _LCD_write_data
 02E0                   .dbline 232
 02E0           ;       delay_nms(2);
 02E0 02E0              ldi R16,2
 02E2 10E0              ldi R17,0
 02E4 0E940000          xcall _delay_nms
 02E8                   .dbline 233
 02E8           ;       LCD_write_data(':');
 02E8 0AE3              ldi R16,58
 02EA 0E940000          xcall _LCD_write_data
 02EE                   .dbline 234
 02EE           ;       delay_nms(2);
 02EE 02E0              ldi R16,2
 02F0 10E0              ldi R17,0
 02F2 0E940000          xcall _delay_nms
 02F6                   .dbline 236
 02F6           ; 
 02F6           ;       temp = (time_buf[5] >> 4) + '0';                
 02F6 80910500          lds R24,_time_buf+5
 02FA 8295              swap R24
 02FC 8F70              andi R24,#0x0F
 02FE 805D              subi R24,208    ; addi 48
 0300 8883              std y+0,R24
 0302                   .dbline 237
 0302           ;     LCD_write_data(temp);
 0302 082F              mov R16,R24
 0304 0E940000          xcall _LCD_write_data
 0308                   .dbline 238
 0308           ;       delay_nms(2);
 0308 02E0              ldi R16,2
 030A 10E0              ldi R17,0
 030C 0E940000          xcall _delay_nms
 0310                   .dbline 239
 0310           ;       temp = (time_buf[5] & 0x0F) + '0';
 0310 80910500          lds R24,_time_buf+5
 0314 8F70              andi R24,15
 0316 805D              subi R24,208    ; addi 48
 0318 8883              std y+0,R24
 031A                   .dbline 240
 031A           ;       LCD_write_data(temp);
 031A 082F              mov R16,R24
 031C 0E940000          xcall _LCD_write_data
 0320                   .dbline 241
 0320           ;       delay_nms(2);
 0320 02E0              ldi R16,2
 0322 10E0              ldi R17,0
 0324 0E940000          xcall _delay_nms
 0328                   .dbline 242
 0328           ;       LCD_write_data(':');
 0328 0AE3              ldi R16,58
 032A 0E940000          xcall _LCD_write_data
 032E                   .dbline 243
 032E           ;       delay_nms(2);
 032E 02E0              ldi R16,2
 0330 10E0              ldi R17,0
 0332 0E940000          xcall _delay_nms
 0336                   .dbline 245
 0336           ; 
 0336           ;       temp = (time_buf[6] >> 4) + '0';                
 0336 80910600          lds R24,_time_buf+6
 033A 8295              swap R24
 033C 8F70              andi R24,#0x0F
 033E 805D              subi R24,208    ; addi 48
 0340 8883              std y+0,R24
 0342                   .dbline 246
 0342           ;     LCD_write_data(temp);
 0342 082F              mov R16,R24
 0344 0E940000          xcall _LCD_write_data
 0348                   .dbline 247
 0348           ;       delay_nms(2);
 0348 02E0              ldi R16,2
 034A 10E0              ldi R17,0
 034C 0E940000          xcall _delay_nms
 0350                   .dbline 248
 0350           ;       temp = (time_buf[6] & 0x0F) + '0';
 0350 80910600          lds R24,_time_buf+6
 0354 8F70              andi R24,15
 0356 805D              subi R24,208    ; addi 48
 0358 8883              std y+0,R24
 035A                   .dbline 249
 035A           ;       LCD_write_data(temp);
 035A 082F              mov R16,R24
 035C 0E940000          xcall _LCD_write_data
 0360                   .dbline 250
 0360           ;       delay_nms(2);
 0360 02E0              ldi R16,2
 0362 10E0              ldi R17,0
 0364 0E940000          xcall _delay_nms
 0368                   .dbline -2
 0368           L66:
 0368                   .dbline 0 ; func end
 0368 2196              adiw R28,1
 036A 0895              ret
 036C                   .dbsym l temp 0 c
 036C                   .dbend
                        .area data(ram, con, rel)
 0008                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 0008           L81:
 0008                   .blkb 2
                        .area idata
 0008 0000              .byte 0,0
                        .area data(ram, con, rel)
 000A                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 000A                   .blkb 19
                        .area idata
 000A 00000000000000000000      .word 0,0,0,0,0
 0014 000000000000000000        .byte 0,0,0,0,0,0,0,0,0
                        .area data(ram, con, rel)
 001D                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
                        .area text(rom, con, rel)
 036C                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 036C                   .dbfunc e Timetostr _Timetostr fpc
 036C           ;            str -> y+0
                        .even
 036C           _Timetostr::
 036C 6597              sbiw R28,21
 036E                   .dbline -1
 036E                   .dbline 255
 036E           ; }
 036E           ; 
 036E           ; //读取时间，保存到字符串数组中
 036E           ; unsigned char* Timetostr(void)
 036E           ; {
 036E                   .dbline 256
 036E           ;       unsigned char str[21]="\0";                                                        //时间字符串数组
 036E 80E0              ldi R24,<L81
 0370 90E0              ldi R25,>L81
 0372 FE01              movw R30,R28
 0374 05E1              ldi R16,21
 0376 10E0              ldi R17,0
 0378 FA93              st -y,R31
 037A EA93              st -y,R30
 037C 9A93              st -y,R25
 037E 8A93              st -y,R24
 0380 0E940000          xcall asgnblk
 0384                   .dbline 257
 0384           ;       ds1302_read_time();                                             //读DS1302数据
 0384 A9DE              xcall _ds1302_read_time
 0386                   .dbline 258
 0386           ;       str[0] = (time_buf[0] >> 4) + '0';
 0386 80910000          lds R24,_time_buf
 038A 8295              swap R24
 038C 8F70              andi R24,#0x0F
 038E 805D              subi R24,208    ; addi 48
 0390 8883              std y+0,R24
 0392                   .dbline 259
 0392           ;       str[1] = (time_buf[0] & 0x0f) + '0';
 0392 80910000          lds R24,_time_buf
 0396 8F70              andi R24,15
 0398 805D              subi R24,208    ; addi 48
 039A 8983              std y+1,R24
 039C                   .dbline 260
 039C           ;       str[2] = (time_buf[1] >> 4) + '0';
 039C 80910100          lds R24,_time_buf+1
 03A0 8295              swap R24
 03A2 8F70              andi R24,#0x0F
 03A4 805D              subi R24,208    ; addi 48
 03A6 8A83              std y+2,R24
 03A8                   .dbline 261
 03A8           ;       str[3] = (time_buf[1] & 0x0f) + '0';
 03A8 80910100          lds R24,_time_buf+1
 03AC 8F70              andi R24,15
 03AE 805D              subi R24,208    ; addi 48
 03B0 8B83              std y+3,R24
 03B2                   .dbline 262
 03B2           ;       str[4] = '-';
 03B2 8DE2              ldi R24,45
 03B4 8C83              std y+4,R24
 03B6                   .dbline 263
 03B6           ;       str[5] = (time_buf[2] >> 4) + '0';
 03B6 80910200          lds R24,_time_buf+2
 03BA 8295              swap R24
 03BC 8F70              andi R24,#0x0F
 03BE 805D              subi R24,208    ; addi 48
 03C0 8D83              std y+5,R24
 03C2                   .dbline 264
 03C2           ;       str[6] = (time_buf[2] & 0x0f) + '0';
 03C2 80910200          lds R24,_time_buf+2
 03C6 8F70              andi R24,15
 03C8 805D              subi R24,208    ; addi 48
 03CA 8E83              std y+6,R24
 03CC                   .dbline 265
 03CC           ;       str[7] = '-';
 03CC 8DE2              ldi R24,45
 03CE 8F83              std y+7,R24
 03D0                   .dbline 266
 03D0           ;       str[8]= (time_buf[3] >> 4) + '0';
 03D0 80910300          lds R24,_time_buf+3
 03D4 8295              swap R24
 03D6 8F70              andi R24,#0x0F
 03D8 805D              subi R24,208    ; addi 48
 03DA 8887              std y+8,R24
 03DC                   .dbline 267
 03DC           ;       str[9] = (time_buf[3] & 0x0f) + '0';
 03DC 80910300          lds R24,_time_buf+3
 03E0 8F70              andi R24,15
 03E2 805D              subi R24,208    ; addi 48
 03E4 8987              std y+9,R24
 03E6                   .dbline 268
 03E6           ;       str[10] = ' '; str[11] = ' ';
 03E6 80E2              ldi R24,32
 03E8 8A87              std y+10,R24
 03EA                   .dbline 268
 03EA 8B87              std y+11,R24
 03EC                   .dbline 269
 03EC           ;       str[12]= (time_buf[4] >> 4) + '0';
 03EC 80910400          lds R24,_time_buf+4
 03F0 8295              swap R24
 03F2 8F70              andi R24,#0x0F
 03F4 805D              subi R24,208    ; addi 48
 03F6 8C87              std y+12,R24
 03F8                   .dbline 270
 03F8           ;       str[13] = (time_buf[4] & 0x0f) + '0';
 03F8 80910400          lds R24,_time_buf+4
 03FC 8F70              andi R24,15
 03FE 805D              subi R24,208    ; addi 48
 0400 8D87              std y+13,R24
 0402                   .dbline 271
 0402           ;       str[14] = ':';
 0402 8AE3              ldi R24,58
 0404 8E87              std y+14,R24
 0406                   .dbline 272
 0406           ;       str[15] = (time_buf[5] >> 4) + '0';
 0406 80910500          lds R24,_time_buf+5
 040A 8295              swap R24
 040C 8F70              andi R24,#0x0F
 040E 805D              subi R24,208    ; addi 48
 0410 8F87              std y+15,R24
 0412                   .dbline 273
 0412           ;       str[16] = (time_buf[5] & 0x0f) + '0';
 0412 80910500          lds R24,_time_buf+5
 0416 8F70              andi R24,15
 0418 805D              subi R24,208    ; addi 48
 041A 888B              std y+16,R24
 041C                   .dbline 274
 041C           ;       str[17] = ':';
 041C 8AE3              ldi R24,58
 041E 898B              std y+17,R24
 0420                   .dbline 275
 0420           ;       str[18] = (time_buf[6] >> 4) + '0';
 0420 80910600          lds R24,_time_buf+6
 0424 8295              swap R24
 0426 8F70              andi R24,#0x0F
 0428 805D              subi R24,208    ; addi 48
 042A 8A8B              std y+18,R24
 042C                   .dbline 276
 042C           ;       str[19] = (time_buf[6] & 0x0f) + '0';
 042C 80910600          lds R24,_time_buf+6
 0430 8F70              andi R24,15
 0432 805D              subi R24,208    ; addi 48
 0434 8B8B              std y+19,R24
 0436                   .dbline 277
 0436           ;       str[20] = 0;
 0436 2224              clr R2
 0438 2C8A              std y+20,R2
 043A                   .dbline 278
 043A           ;       return str;
 043A 8E01              movw R16,R28
 043C                   .dbline -2
 043C           L80:
 043C                   .dbline 0 ; func end
 043C 6596              adiw R28,21
 043E 0895              ret
 0440                   .dbsym l str 0 A[21:21]c
 0440                   .dbend
                        .area data(ram, con, rel)
 001D                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 001D           L65:
 001D                   .blkb 5
                        .area idata
 001D D6DCC8D500        .byte 214,220,200,213,0
                        .area data(ram, con, rel)
 0022                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 0022           L62:
 0022                   .blkb 5
                        .area idata
 0022 D6DCC1F900        .byte 214,220,193,249,0
                        .area data(ram, con, rel)
 0027                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 0027           L59:
 0027                   .blkb 5
                        .area idata
 0027 D6DCCEE500        .byte 214,220,206,229,0
                        .area data(ram, con, rel)
 002C                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 002C           L56:
 002C                   .blkb 5
                        .area idata
 002C D6DCCBC400        .byte 214,220,203,196,0
                        .area data(ram, con, rel)
 0031                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 0031           L53:
 0031                   .blkb 5
                        .area idata
 0031 D6DCC8FD00        .byte 214,220,200,253,0
                        .area data(ram, con, rel)
 0036                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 0036           L50:
 0036                   .blkb 5
                        .area idata
 0036 D6DCB6FE00        .byte 214,220,182,254,0
                        .area data(ram, con, rel)
 003B                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 003B           L47:
 003B                   .blkb 5
                        .area idata
 003B D6DCD2BB00        .byte 214,220,210,187,0
                        .area data(ram, con, rel)
 0040                   .dbfile G:\基于ASR技术的独居老人应急呼救系统\OldManAlarm\12864time.c
 0040           ; }
