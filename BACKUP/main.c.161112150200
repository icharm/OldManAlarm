//DMAVR-128开发板12864型液晶显示实时时钟驱动程序
//编译环境 编译环境 ICCAVR 7.16A
//系统时钟7.3728MHZ，设置熔丝位为外部高频石英晶体振荡，启动时间4.1ms
//作者：阿迪 www.avrgcc.com
//日期：2010.12.112

//***********************************************************************
//			包含文件
//***********************************************************************

#include <string.h>
#include <stdio.h>
#include <macros.h>
#include <AVRdef.h>
#include <iom128v.h>
#include "DS18B20.h"    //温度传感器
#include "basic.h"      //基础函数
#include "12864time.h"  //DS1302时钟
#include "LCD.h"        //12864LCD显示屏
#include "USART.h"
#include "SYN7318.h"
#include "ESP8266.h"    

extern uchar RxCharBuf[16];
extern uchar RxCharNum, RxBufWr, RxBufRd;
extern uchar TxCharBuf[128];
extern uchar TxCharNum,TxStrLen;

extern uchar RxCharBuf_wifi[16];
extern uchar RxCharNum_wifi, RxBufWr_wifi, RxBufRd_wifi;
extern uchar TxCharBuf_wifi[128];
extern uchar TxCharNum_wifi,TxStrLen_wifi;

 
//****************************************************************
//  显示欢迎信息
//****************************************************************
void welcomeDisplay(void)
{
 	DisplayCgrom(0x90,"欢迎使用独居老人");
	delay_nms(100);
	DisplayCgrom(0x8a,"预警系统");
	delay_nms(3000);
	LCD_clear();                                  //清屏
}

//****************************************************************
//  显示语音模块初始化信息
//****************************************************************
void syn7318InitDisplay(void)
{
 	DisplayCgrom(0x90,"语音模块");
	delay_nms(100);
	DisplayCgrom(0x8a,"初始化中");
	delay_nms(3000);
	LCD_clear();                                  //清屏
}


//call this routine to initialize all peripherals
void init_devices(void)
{
    //stop errant interrupts until set up
    CLI(); //disable all interrupts
    XDIV  = 0x00; //xtal divider
    XMCRA = 0x00; //external memory
    UART0_Init();
    //UART1_Init();
    MCUCR = 0x00;
    EICRA = 0x00; //extended ext ints
    EICRB = 0x00; //extended ext ints
    EIMSK = 0x00;
    TIMSK = 0x00; //timer interrupt sources
    ETIMSK = 0x00; //extended timer interrupt sources
    SEI(); //re-enable interrupts
    //all peripherals are now initialized
}

//***********************************************************************
//			主程序
//***********************************************************************
void main(void)
{
    // volatile unsigned char temp;
	uchar u8temp;
    uchar command;
    uchar temp;   

    system_init();                                //系统初始化，设置IO口属性
	delay_nms(100);                                //延时100ms
	LCD_init();                                   //液晶参数初始化设置
	LCD_clear();                                  //清屏
    
	ds1302_init();                                //DS1302初始化
	DS18B20_Reset();			        		  //复位D18B20
	delay_nms(10);
	//ds1302_write_time();                        //向DS1302写初始数据，如年月和时间等
	welcomeDisplay();
	init_devices(); 
	
    SYN7318_init();                               //SYN7318语音识别模块 初始化
    syn7318InitDisplay();
       

    //updateWords();                                //SYN7318语音识别模块 词典更新                                                 
    //SYN7318_welcome();

    updateWords();

    while(1) { 

		displayDateTime();
		LCD_write_temperature();
        startRecognition();
        command = checkSendReturn();
        
        switch(command){
            case OVER_TIME :
                break;
            case 0x04 :
                //SYN7318_Error();
                DisplayCgrom(0x88,"语音超时");
                delay_nms(2);
                break;
            case 0x05 :
                //SYN7318_Error();
                DisplayCgrom(0x88,"识别拒识");
                delay_nms(2);
                break;
            case 0x07 :
                //SYN7318_Error();
                DisplayCgrom(0x88,"识别拒识一");
                delay_nms(2);
                break;
            case 0x06 :
                //SYN7318_Error();
                DisplayCgrom(0x88,"识别内部错误");
                delay_nms(2);
                break;
            case 1 :
                DisplayCgrom(0x8C,"救命");
                delay_nms(2);
                //wifi_SENDMSG();
                wifi_Restart();
                break;
            case 2 :
                DisplayCgrom(0x8C,"哎呦");
                delay_nms(2);
                break;
            case 100 :
                DisplayCgrom(0x8C,"温度");
                delay_nms(2);
                break;
            default :
                DisplayCgrom(0x8C,"识别成功");
                delay_nms(2);
                LCD_write_com(0x8C);
	            delay_nms(2);
                temp = (command >> 4) + '0';          //在LCD上写要显示的数据	
                LCD_write_data(temp);
                delay_nms(2);
                break;
        }

        //if(command == )
       //wifi
        while(RxBufWr_wifi != RxBufRd_wifi) {
            LCD_write_com(0x98);
            delay_nms(2);
            u8temp = RxCharBuf_wifi[RxBufRd_wifi];
            RxBufRd_wifi++;
            RxBufRd_wifi &= 0x0f;
            if(u8temp == 0x0d) break;
            LCD_write_data(u8temp);
            delay_nms(2);
            //DisplayCgrom(0x98, &u8temp);
        }
	}
}

